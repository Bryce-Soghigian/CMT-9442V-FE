{"ast":null,"code":"import _slicedToArray from \"/Users/lambda_school_loaner_126/Desktop/CMT-FE/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/Users/lambda_school_loaner_126/Desktop/CMT-FE/src/Components/Channels/MainChannelRenderer.js\";\nimport React, { useState, useEffect } from 'react';\nimport Axios from 'axios';\nimport DefaultTextGlitch from '../ThreeEffects/DefaultGlitch/DefaultTextGlitch';\nimport DefaultGlitch from '../ThreeEffects/DefaultGlitch/DefaultGlitch';\nimport ComicBookEffect from '../ThreeEffects/ComicBook/ComicBookEffect';\nimport ComicBookEffectText from '../ThreeEffects/ComicBook/ComicBookEffectText';\nimport CreepyLightText from '../ThreeEffects/CreepyLight/CreepyLightText';\nimport ComicBookNoGeo from '../ThreeEffects/ComicBook/ComicBookNoGeo';\nimport Start from '../Start/Start';\nimport StaticGlitch from '../ThreeEffects/StaticGlitch/StaticGlitch';\nexport default function MainChannelRenderer() {\n  const _useState = useState({}),\n        _useState2 = _slicedToArray(_useState, 2),\n        state = _useState2[0],\n        setState = _useState2[1];\n\n  const _useState3 = useState(false),\n        _useState4 = _slicedToArray(_useState3, 2),\n        loading = _useState4[0],\n        setLoading = _useState4[1];\n\n  useEffect(() => {\n    Axios.get(\"https://ourtvgame.herokuapp.com/api/adv/initialize\").then(res => {\n      setState(res.data);\n      setLoading(true);\n    }).catch(err => {\n      console.error(err);\n    });\n  }, []);\n  /*\n  audio: \"glitched_tones\"\n  background: \"https://i.imgur.com/WU4JRaN.jpgsomeUrl\"\n  channel: 0\n  error_msg: \"\"\n  geometry: \"100\"\n  glitchtype: \"static\"\n  id: 1\n  text: \"\"\"\"*/\n\n  console.log(state); // if(state.glitchtype===\"loading\"){\n  //     console.log(\"state is loading...\")\n  //     return(\n  //         <div>\n  //          <StaticGlitch/>\n  //         </div>\n  //     )\n  //  if(state.glitchtype === \"static\"){\n  // if(state.glitchtype === null){\n  //     return (\n  //         <div></div>\n  //     )\n  // }else{\n  //     return(\n  //         <div>\n  //             <DefaultTextGlitch background={state.background} text={state.text}/>\n  //         </div>\n  //             )\n  // }\n\n  if (loading === false) {\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 56\n      },\n      __self: this\n    }, \"Loading\");\n  } else {\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 62\n      },\n      __self: this\n    }, React.createElement(DefaultTextGlitch, {\n      background: state.background,\n      text: state.text,\n      channel: state.id,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 63\n      },\n      __self: this\n    }));\n  }\n} // const [state, setstate] = useState([\n//     {\n//         channel:\"000\",\n//         background_url:\"https://threejsfundamentals.org/threejs/resources/images/daikanyama.jpg\",\n//         text:\"spooky\",\n//         glitchtype :\"DefaultTextGlitch\",\n//         requried_mp3s:\"Mp3\"\n//     },\n//     {\n//         channel:\"001\",\n//         background_url:\"some url\",\n//         text:\"testing props text\",\n//         glitchtype :\"DefaultTextGlitch\",\n//         requried_mp3s:\"Mp3\"\n//     },\n//     {\n//         channel:\"002\",\n//         background_url:\"some url\",\n//         text:\"testing props text\",\n//         glitchtype :\"DefaultGlitch\",\n//         requried_mp3s:\"Mp3\"\n//     }\n// ])\n// console.log(state)\n// console.log(state[0].text,\"state.text\")\n// console.log(state.glitchtype)\n// return(\n//     <div>\n//         test\n//     </div>\n// )\n// if(state[0].glitchtype === \"DefaultTextGlitch\"){\n//     return (\n//         <div>\n//             <DefaultTextGlitch text={state[0].text} channel={state[0].channel} background_url={state[0].background_url}/>\n//         </div>\n//         )\n// }else if(state[0].glitchtype === \"static\"){\n//     return (\n//         <div>\n//             <DefaultGlitch/>\n//         </div>\n//         )\n// }else if (state[0].glitchtype === \"ComicBook\"){\n//     return (\n//     <div>\n//  <ComicBookEffect text={state[0].text} channel={state[0].channel} background_url={state[0].background_url}/>\n//     </div>)\n// }else if(state[0].glitchtype ===\"None\"){\n//     return (\n//         <div>\n//             <Start/>\n//         </div>\n//     )\n// }else if(state[0].glitchtype ===\"ComicBookText\"){\n//     return(\n//         <div>\n//             <ComicBookEffectText text={state[0].text} channel={state[0].channel}  background_url={state[0].background_url}/>\n//         </div>\n//     )\n// }else if(state[0].glitchtype === \"CreepyLightText\"){\n//     return(\n//         <div>\n//             <CreepyLightText text={state[0].text} channel={state[0].channel} background_url={state[0].background_url}/>\n//         </div>\n//     )\n// }else if (state[0].glitchtype === \"ComicNoGeo\"){\n//     console.log(state[0].background_url,\"Background URL\")\n//     return(\n//         <div>\n//             <ComicBookNoGeo text={state[0].text} channel={state[0].channel} background_url={state[0].background_url}/>\n//         </div>\n//     )\n// }","map":{"version":3,"sources":["/Users/lambda_school_loaner_126/Desktop/CMT-FE/src/Components/Channels/MainChannelRenderer.js"],"names":["React","useState","useEffect","Axios","DefaultTextGlitch","DefaultGlitch","ComicBookEffect","ComicBookEffectText","CreepyLightText","ComicBookNoGeo","Start","StaticGlitch","MainChannelRenderer","state","setState","loading","setLoading","get","then","res","data","catch","err","console","error","log","background","text","id"],"mappings":";;AAAA,OAAOA,KAAP,IAAcC,QAAd,EAAuBC,SAAvB,QAAuC,OAAvC;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,OAAOC,iBAAP,MAA8B,iDAA9B;AACA,OAAOC,aAAP,MAA0B,6CAA1B;AACA,OAAOC,eAAP,MAA4B,2CAA5B;AACA,OAAOC,mBAAP,MAAgC,+CAAhC;AACA,OAAOC,eAAP,MAA4B,6CAA5B;AACA,OAAOC,cAAP,MAA2B,0CAA3B;AACA,OAAOC,KAAP,MAAkB,gBAAlB;AACA,OAAOC,YAAP,MAAyB,2CAAzB;AACA,eAAe,SAASC,mBAAT,GAA+B;AAAA,oBACjBX,QAAQ,CAAC,EAAD,CADS;AAAA;AAAA,QACnCY,KADmC;AAAA,QAC7BC,QAD6B;;AAAA,qBAEZb,QAAQ,CAAC,KAAD,CAFI;AAAA;AAAA,QAEnCc,OAFmC;AAAA,QAE1BC,UAF0B;;AAG1Cd,EAAAA,SAAS,CAAC,MAAM;AACpBC,IAAAA,KAAK,CAACc,GAAN,CAAU,oDAAV,EACCC,IADD,CACOC,GAAD,IAAS;AAEXL,MAAAA,QAAQ,CAACK,GAAG,CAACC,IAAL,CAAR;AACAJ,MAAAA,UAAU,CAAC,IAAD,CAAV;AACH,KALD,EAKGK,KALH,CAKUC,GAAD,IAAS;AACdC,MAAAA,OAAO,CAACC,KAAR,CAAcF,GAAd;AACH,KAPD;AASK,GAVQ,EAUN,EAVM,CAAT;AAWA;;;;;;;;;;AASAC,EAAAA,OAAO,CAACE,GAAR,CAAYZ,KAAZ,EAvB0C,CAwB9C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACA,MAAGE,OAAO,KAAG,KAAb,EAAmB;AACf,WACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBADJ;AAKH,GAND,MAMK;AACD,WACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI,oBAAC,iBAAD;AAAmB,MAAA,UAAU,EAAEF,KAAK,CAACa,UAArC;AAAiD,MAAA,IAAI,EAAEb,KAAK,CAACc,IAA7D;AAAmE,MAAA,OAAO,EAAEd,KAAK,CAACe,EAAlF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADJ,CADJ;AAKH;AAEA,C,CAED;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA","sourcesContent":["import React,{useState,useEffect} from 'react'\nimport Axios from 'axios'\nimport DefaultTextGlitch from '../ThreeEffects/DefaultGlitch/DefaultTextGlitch'\nimport DefaultGlitch from '../ThreeEffects/DefaultGlitch/DefaultGlitch'\nimport ComicBookEffect from '../ThreeEffects/ComicBook/ComicBookEffect'\nimport ComicBookEffectText from '../ThreeEffects/ComicBook/ComicBookEffectText'\nimport CreepyLightText from '../ThreeEffects/CreepyLight/CreepyLightText'\nimport ComicBookNoGeo from '../ThreeEffects/ComicBook/ComicBookNoGeo'\nimport Start from '../Start/Start'\nimport StaticGlitch from '../ThreeEffects/StaticGlitch/StaticGlitch'\nexport default function MainChannelRenderer() {\n    const [state,setState] = useState({})\n    const [loading, setLoading] = useState(false)\n    useEffect(() => {\nAxios.get(\"https://ourtvgame.herokuapp.com/api/adv/initialize\")\n.then((res) => {\n\n    setState(res.data)\n    setLoading(true)\n}).catch((err) => {\n    console.error(err)\n})\n\n    }, [])\n    /*\n    audio: \"glitched_tones\"\nbackground: \"https://i.imgur.com/WU4JRaN.jpgsomeUrl\"\nchannel: 0\nerror_msg: \"\"\ngeometry: \"100\"\nglitchtype: \"static\"\nid: 1\ntext: \"\"\"\"*/\n    console.log(state)\n// if(state.glitchtype===\"loading\"){\n//     console.log(\"state is loading...\")\n//     return(\n//         <div>\n//          <StaticGlitch/>\n//         </div>\n//     )\n//  if(state.glitchtype === \"static\"){\n// if(state.glitchtype === null){\n//     return (\n//         <div></div>\n//     )\n// }else{\n//     return(\n//         <div>\n//             <DefaultTextGlitch background={state.background} text={state.text}/>\n//         </div>\n//             )\n// }\nif(loading===false){\n    return(\n        <div>\n            Loading\n        </div>\n    )\n}else{\n    return(\n        <div>\n            <DefaultTextGlitch background={state.background} text={state.text} channel={state.id}/>\n        </div>\n    )\n}\n\n}\n\n// const [state, setstate] = useState([\n//     {\n//         channel:\"000\",\n//         background_url:\"https://threejsfundamentals.org/threejs/resources/images/daikanyama.jpg\",\n//         text:\"spooky\",\n//         glitchtype :\"DefaultTextGlitch\",\n//         requried_mp3s:\"Mp3\"\n//     },\n//     {\n//         channel:\"001\",\n//         background_url:\"some url\",\n//         text:\"testing props text\",\n//         glitchtype :\"DefaultTextGlitch\",\n//         requried_mp3s:\"Mp3\"\n//     },\n//     {\n//         channel:\"002\",\n//         background_url:\"some url\",\n//         text:\"testing props text\",\n//         glitchtype :\"DefaultGlitch\",\n//         requried_mp3s:\"Mp3\"\n//     }\n// ])\n// console.log(state)\n// console.log(state[0].text,\"state.text\")\n// console.log(state.glitchtype)\n// return(\n//     <div>\n//         test\n//     </div>\n// )\n// if(state[0].glitchtype === \"DefaultTextGlitch\"){\n//     return (\n//         <div>\n          \n//             <DefaultTextGlitch text={state[0].text} channel={state[0].channel} background_url={state[0].background_url}/>\n//         </div>\n//         )\n// }else if(state[0].glitchtype === \"static\"){\n//     return (\n//         <div>\n            \n//             <DefaultGlitch/>\n//         </div>\n//         )\n// }else if (state[0].glitchtype === \"ComicBook\"){\n//     return (\n//     <div>\n//  <ComicBookEffect text={state[0].text} channel={state[0].channel} background_url={state[0].background_url}/>\n//     </div>)\n// }else if(state[0].glitchtype ===\"None\"){\n//     return (\n//         <div>\n//             <Start/>\n//         </div>\n//     )\n// }else if(state[0].glitchtype ===\"ComicBookText\"){\n//     return(\n//         <div>\n//             <ComicBookEffectText text={state[0].text} channel={state[0].channel}  background_url={state[0].background_url}/>\n//         </div>\n//     )\n// }else if(state[0].glitchtype === \"CreepyLightText\"){\n//     return(\n//         <div>\n//             <CreepyLightText text={state[0].text} channel={state[0].channel} background_url={state[0].background_url}/>\n//         </div>\n//     )\n// }else if (state[0].glitchtype === \"ComicNoGeo\"){\n//     console.log(state[0].background_url,\"Background URL\")\n//     return(\n//         <div>\n//             <ComicBookNoGeo text={state[0].text} channel={state[0].channel} background_url={state[0].background_url}/>\n//         </div>\n\n//     )\n// }\n\n"]},"metadata":{},"sourceType":"module"}