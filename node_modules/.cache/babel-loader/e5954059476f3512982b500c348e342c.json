{"ast":null,"code":"var _jsxFileName = \"/Users/lambda_school_loaner_126/Desktop/CMT-FE/src/Components/ThreeEffects/ComicBook/ComicBookNoGeo.js\";\nimport React, { useEffect, useRef } from 'react';\nimport * as THREE from 'three';\nimport { EffectComposer } from 'three/examples/jsm/postprocessing/EffectComposer.js';\nimport { RenderPass } from 'three/examples/jsm/postprocessing/RenderPass.js';\nimport { ShaderPass } from 'three/examples/jsm/postprocessing/ShaderPass.js';\nimport { RGBShiftShader } from 'three/examples/jsm/shaders/RGBShiftShader.js';\nimport { DotScreenShader } from 'three/examples/jsm/shaders/DotScreenShader.js';\nimport './ComicBook.css';\nexport default function ComicBookEffect(props) {\n  useEffect(() => {\n    var camera, scene, renderer, composer;\n    var object, light; // const textvar = props.text\n\n    init();\n    animate();\n\n    function Options() {\n      var wildGlitch = document.getElementById('Comic');\n    }\n\n    function init() {\n      renderer = new THREE.WebGLRenderer();\n      renderer.setPixelRatio(window.devicePixelRatio);\n      renderer.setSize(window.innerWidth, window.innerHeight);\n      document.body.appendChild(renderer.domElement); //\n\n      camera = new THREE.PerspectiveCamera(70, window.innerWidth / window.innerHeight, 1, 1000);\n      camera.position.z = 400;\n      scene = new THREE.Scene();\n      scene.fog = new THREE.Fog(0x000000, 1, 1000);\n      object = new THREE.Object3D();\n      scene.add(object); //==================Text===================//\n      // var loader = new THREE.FontLoader();\n      // var font =loader.parse(fontJSON)\n      // var geometry = new THREE.TextGeometry(textvar,{font:font, size: 160, height: 10, material: 0, bevelThickness: 1, extrudeMaterial:10})\n      // var material = new THREE.MeshPhongMaterial( { color: 0xffffff, flatShading: true } );\n      // var mesh = new THREE.Mesh(geometry,material)\n      // object.add(mesh)\n\n      scene.add(new THREE.AmbientLight(0x222222));\n      light = new THREE.DirectionalLight(0xffffff);\n      light.position.set(1, 1, 1);\n      scene.add(light); // postprocessing\n\n      composer = new EffectComposer(renderer);\n      composer.addPass(new RenderPass(scene, camera));\n      var effect = new ShaderPass(DotScreenShader);\n      effect.uniforms['scale'].value = 4;\n      composer.addPass(effect);\n      var effect = new ShaderPass(RGBShiftShader);\n      effect.uniforms['amount'].value = 0.0015;\n      composer.addPass(effect);\n      window.addEventListener('resize', onWindowResize, false);\n      var wildGlitchOption = document.getElementById('Comic');\n      wildGlitchOption.addEventListener('change', Options);\n      window.addEventListener('resize', onWindowResize, false);\n    }\n\n    function onWindowResize() {\n      camera.aspect = window.innerWidth / window.innerHeight;\n      camera.updateProjectionMatrix();\n      renderer.setSize(window.innerWidth, window.innerHeight);\n      composer.setSize(window.innerWidth, window.innerHeight);\n    }\n\n    function animate() {\n      requestAnimationFrame(animate);\n      object.rotation.x += 0.005;\n      object.rotation.y += 0.01;\n      composer.render();\n    }\n  }, [props]);\n  return React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 72\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    id: \"Channel-Div\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 73\n    },\n    __self: this\n  }, props.channel), React.createElement(\"div\", {\n    id: \"Comic\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 74\n    },\n    __self: this\n  }));\n}","map":{"version":3,"sources":["/Users/lambda_school_loaner_126/Desktop/CMT-FE/src/Components/ThreeEffects/ComicBook/ComicBookNoGeo.js"],"names":["React","useEffect","useRef","THREE","EffectComposer","RenderPass","ShaderPass","RGBShiftShader","DotScreenShader","ComicBookEffect","props","camera","scene","renderer","composer","object","light","init","animate","Options","wildGlitch","document","getElementById","WebGLRenderer","setPixelRatio","window","devicePixelRatio","setSize","innerWidth","innerHeight","body","appendChild","domElement","PerspectiveCamera","position","z","Scene","fog","Fog","Object3D","add","AmbientLight","DirectionalLight","set","addPass","effect","uniforms","value","addEventListener","onWindowResize","wildGlitchOption","aspect","updateProjectionMatrix","requestAnimationFrame","rotation","x","y","render","channel"],"mappings":"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","sourcesContent":["import React,{useEffect,useRef} from 'react'\nimport * as THREE from 'three';\nimport { EffectComposer } from 'three/examples/jsm/postprocessing/EffectComposer.js';\nimport { RenderPass } from 'three/examples/jsm/postprocessing/RenderPass.js';\nimport { ShaderPass } from 'three/examples/jsm/postprocessing/ShaderPass.js';\nimport { RGBShiftShader } from 'three/examples/jsm/shaders/RGBShiftShader.js';\nimport { DotScreenShader } from 'three/examples/jsm/shaders/DotScreenShader.js';\nimport './ComicBook.css'\nexport default function ComicBookEffect(props) {\n    useEffect(() => {\n        var camera, scene, renderer, composer;\n        var object, light;\n        // const textvar = props.text\n        init();\n        animate();\n        function Options() {\n            var wildGlitch = document.getElementById( 'Comic' );\n            \n        }\n        function init() {\n            renderer = new THREE.WebGLRenderer();\n            renderer.setPixelRatio( window.devicePixelRatio );\n            renderer.setSize( window.innerWidth, window.innerHeight );\n            document.body.appendChild( renderer.domElement );\n            //\n            camera = new THREE.PerspectiveCamera( 70, window.innerWidth / window.innerHeight, 1, 1000 );\n            camera.position.z = 400;\n            scene = new THREE.Scene();\n            scene.fog = new THREE.Fog( 0x000000, 1, 1000 );\n            object = new THREE.Object3D();\n            scene.add( object );\n            //==================Text===================//\n            // var loader = new THREE.FontLoader();\n            // var font =loader.parse(fontJSON)\n            // var geometry = new THREE.TextGeometry(textvar,{font:font, size: 160, height: 10, material: 0, bevelThickness: 1, extrudeMaterial:10})\n            // var material = new THREE.MeshPhongMaterial( { color: 0xffffff, flatShading: true } );\n            // var mesh = new THREE.Mesh(geometry,material)\n            // object.add(mesh)\n\n            scene.add( new THREE.AmbientLight( 0x222222 ) );\n            light = new THREE.DirectionalLight( 0xffffff );\n            light.position.set( 1, 1, 1 );\n            scene.add( light );\n            // postprocessing\n            composer = new EffectComposer( renderer );\n            composer.addPass( new RenderPass( scene, camera ) );\n            var effect = new ShaderPass( DotScreenShader );\n            effect.uniforms[ 'scale' ].value = 4;\n            composer.addPass( effect );\n            var effect = new ShaderPass( RGBShiftShader );\n            effect.uniforms[ 'amount' ].value = 0.0015;\n            composer.addPass( effect );\n            window.addEventListener( 'resize', onWindowResize, false );\n            var wildGlitchOption = document.getElementById( 'Comic' );\n            wildGlitchOption.addEventListener( 'change', Options);\n            window.addEventListener( 'resize', onWindowResize, false );\n        }\n        function onWindowResize() {\n            camera.aspect = window.innerWidth / window.innerHeight;\n            camera.updateProjectionMatrix();\n            renderer.setSize( window.innerWidth, window.innerHeight );\n            composer.setSize( window.innerWidth, window.innerHeight );\n        }\n        function animate() {\n            requestAnimationFrame( animate );\n            object.rotation.x += 0.005;\n            object.rotation.y += 0.01;\n            composer.render();\n        }\n    }, [props])\n    return (\n        <div>\n            <div id=\"Channel-Div\">{props.channel}</div>\n            <div id = \"Comic\"></div>\n        </div>\n    )\n}\n"]},"metadata":{},"sourceType":"module"}