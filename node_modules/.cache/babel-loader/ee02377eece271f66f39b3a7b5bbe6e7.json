{"ast":null,"code":"import _slicedToArray from \"/Users/lambda_school_loaner_126/Desktop/CMT-FE/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/Users/lambda_school_loaner_126/Desktop/CMT-FE/src/Components/Channels/MainChannelRenderer.js\";\nimport React, { useState } from 'react';\nimport DefaultTextGlitch from '../ThreeEffects/DefaultGlitch/DefaultTextGlitch';\nimport DefaultGlitch from '../ThreeEffects/DefaultGlitch/DefaultGlitch';\nexport default function MainChannelRenderer() {\n  const _useState = useState([{\n    text: \"testing props text\",\n    glitchtype: \"DefaultGlitch\"\n  }]),\n        _useState2 = _slicedToArray(_useState, 2),\n        state = _useState2[0],\n        setstate = _useState2[1];\n\n  console.log(state);\n  console.log(state.text, \"state.text\");\n  console.log(state.glitchtype);\n\n  if (state.glitchtype === \"DefaultTextGlitch\") {\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 18\n      },\n      __self: this\n    }, React.createElement(DefaultTextGlitch, {\n      text: state.text,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 19\n      },\n      __self: this\n    }));\n  } else if (state.glitchtype === \"DefaultGlitch\") {\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 24\n      },\n      __self: this\n    }, React.createElement(DefaultGlitch, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 25\n      },\n      __self: this\n    }));\n  } else {\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 29\n      },\n      __self: this\n    }, \"End\");\n  }\n  /*\n  \n  \n  channel 1 font text channel num \n  chan2\n  chan3\n  \n  <DefaultGlitch text={\"Look behind you\"} >\n  \n  \n  \n  \n  \n  \n  */\n  // if(channel === \"1\"){\n  //     return (\n  //         <div>\n  //         </div>\n  //     )\n  // }elif\n  // return (\n  //     <div>\n  //     </div>\n  // )\n\n}","map":{"version":3,"sources":["/Users/lambda_school_loaner_126/Desktop/CMT-FE/src/Components/Channels/MainChannelRenderer.js"],"names":["React","useState","DefaultTextGlitch","DefaultGlitch","MainChannelRenderer","text","glitchtype","state","setstate","console","log"],"mappings":";;AAAA,OAAOA,KAAP,IAAcC,QAAd,QAA6B,OAA7B;AACA,OAAOC,iBAAP,MAA8B,iDAA9B;AACA,OAAOC,aAAP,MAA0B,6CAA1B;AAEA,eAAe,SAASC,mBAAT,GAA+B;AAAA,oBACpBH,QAAQ,CAAC,CAC/B;AACII,IAAAA,IAAI,EAAC,oBADT;AAEIC,IAAAA,UAAU,EAAE;AAFhB,GAD+B,CAAD,CADY;AAAA;AAAA,QACvCC,KADuC;AAAA,QAChCC,QADgC;;AAQ9CC,EAAAA,OAAO,CAACC,GAAR,CAAYH,KAAZ;AACAE,EAAAA,OAAO,CAACC,GAAR,CAAYH,KAAK,CAACF,IAAlB,EAAuB,YAAvB;AACAI,EAAAA,OAAO,CAACC,GAAR,CAAYH,KAAK,CAACD,UAAlB;;AACA,MAAGC,KAAK,CAACD,UAAN,KAAqB,mBAAxB,EAA4C;AACxC,WACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI,oBAAC,iBAAD;AAAmB,MAAA,IAAI,EAAEC,KAAK,CAACF,IAA/B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADJ,CADJ;AAKH,GAND,MAMM,IAAGE,KAAK,CAACD,UAAN,KAAqB,eAAxB,EAAwC;AAC1C,WACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI,oBAAC,aAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADJ,CADJ;AAKH,GANK,MAMD;AACD,WAAQ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aAAR;AACH;AACD;;;;;;;;;;;;;;;AAoBI;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AAEA;AACA;;AACH","sourcesContent":["import React,{useState} from 'react'\nimport DefaultTextGlitch from '../ThreeEffects/DefaultGlitch/DefaultTextGlitch'\nimport DefaultGlitch from '../ThreeEffects/DefaultGlitch/DefaultGlitch'\n\nexport default function MainChannelRenderer() {\nconst [state, setstate] = useState([\n    {\n        text:\"testing props text\",\n        glitchtype :\"DefaultGlitch\"\n        \n    }\n])\nconsole.log(state)\nconsole.log(state.text,\"state.text\")\nconsole.log(state.glitchtype)\nif(state.glitchtype === \"DefaultTextGlitch\"){\n    return (\n        <div>\n            <DefaultTextGlitch text={state.text}/>\n        </div>\n        )\n}else if(state.glitchtype === \"DefaultGlitch\"){\n    return (\n        <div>\n            <DefaultGlitch/>\n        </div>\n        )\n}else{\n    return (<div>End</div>)\n}\n/*\n\n\nchannel 1 font text channel num \nchan2\nchan3\n\n<DefaultGlitch text={\"Look behind you\"} >\n\n\n\n\n\n\n*/\n\n\n\n\n\n    // if(channel === \"1\"){\n    //     return (\n    //         <div>\n\n    //         </div>\n    //     )\n    // }elif\n    // return (\n    //     <div>\n            \n    //     </div>\n    // )\n}\n"]},"metadata":{},"sourceType":"module"}