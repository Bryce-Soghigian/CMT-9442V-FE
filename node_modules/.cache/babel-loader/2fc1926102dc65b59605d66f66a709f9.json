{"ast":null,"code":"var _jsxFileName = \"/Users/lambda_school_loaner_126/Desktop/CMT-FE/src/Components/ThreeEffects/DefaultGlitch/DefaultGlitch.js\";\nimport React, { useEffect, useRef } from 'react';\nimport * as THREE from 'three';\nimport { EffectComposer } from 'three/examples/jsm/postprocessing/EffectComposer.js';\nimport { RenderPass } from 'three/examples/jsm/postprocessing/RenderPass.js';\nimport { GlitchPass } from 'three/examples/jsm/postprocessing/GlitchPass.js';\nimport fontJSON from '../fonts/fontJSON.json';\nexport default function DefaultGlitch() {\n  const GlitchRef = useRef();\n  useEffect(() => {\n    //==================THREEJS Stuff===================//\n    var camera, scene, renderer, composer;\n    var object, light;\n    var glitchPass;\n    init();\n    animate();\n\n    function updateOptions() {\n      var wildGlitch = document.getElementById('wildGlitch');\n      glitchPass.goWild = wildGlitch.checked;\n    }\n\n    function init() {\n      renderer = new THREE.WebGLRenderer();\n      renderer.setPixelRatio(window.devicePixelRatio);\n      renderer.setSize(window.innerWidth, window.innerHeight);\n      document.body.appendChild(renderer.domElement); //\n\n      camera = new THREE.PerspectiveCamera(150, window.innerWidth / window.innerHeight, 1, 1000);\n      camera.position.z = 400;\n      scene = new THREE.Scene();\n      scene.fog = new THREE.Fog(0x000000, 1, 1000);\n      object = new THREE.Object3D();\n      scene.add(object); //FOnt\n\n      var loader = new THREE.FontLoader();\n      var font = loader.parse(fontJSON);\n      var geometry = new THREE.TextGeometry(\"Test String\", {\n        font: font,\n        size: 160,\n        height: 10,\n        material: 0,\n        bevelThickness: 1,\n        extrudeMaterial: 10\n      });\n      var material = new THREE.MeshPhongMaterial({\n        color: 0xffffff,\n        flatShading: true\n      });\n      var mesh = new THREE.Mesh(geometry, material);\n      object.add(mesh);\n      scene.add(new THREE.AmbientLight(0x222222));\n      light = new THREE.DirectionalLight(0xffffff);\n      light.position.set(1, 1, 1);\n      scene.add(light); // postprocessing\n\n      composer = new EffectComposer(renderer);\n      composer.addPass(new RenderPass(scene, camera));\n      glitchPass = new GlitchPass();\n      composer.addPass(glitchPass); //\n\n      window.addEventListener('resize', onWindowResize, false);\n      var wildGlitchOption = document.getElementById('wildGlitch');\n      wildGlitchOption.addEventListener('change', updateOptions);\n      updateOptions();\n    }\n\n    function onWindowResize() {\n      camera.aspect = window.innerWidth / window.innerHeight;\n      camera.updateProjectionMatrix();\n      renderer.setSize(window.innerWidth, window.innerHeight);\n      composer.setSize(window.innerWidth, window.innerHeight);\n    }\n\n    function animate() {\n      requestAnimationFrame(animate);\n      composer.render();\n    }\n  }, [GlitchRef]);\n  return React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 69\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    ref: GlitchRef,\n    id: \"wildGlitch\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 70\n    },\n    __self: this\n  }));\n}","map":{"version":3,"sources":["/Users/lambda_school_loaner_126/Desktop/CMT-FE/src/Components/ThreeEffects/DefaultGlitch/DefaultGlitch.js"],"names":["React","useEffect","useRef","THREE","EffectComposer","RenderPass","GlitchPass","fontJSON","DefaultGlitch","GlitchRef","camera","scene","renderer","composer","object","light","glitchPass","init","animate","updateOptions","wildGlitch","document","getElementById","goWild","checked","WebGLRenderer","setPixelRatio","window","devicePixelRatio","setSize","innerWidth","innerHeight","body","appendChild","domElement","PerspectiveCamera","position","z","Scene","fog","Fog","Object3D","add","loader","FontLoader","font","parse","geometry","TextGeometry","size","height","material","bevelThickness","extrudeMaterial","MeshPhongMaterial","color","flatShading","mesh","Mesh","AmbientLight","DirectionalLight","set","addPass","addEventListener","onWindowResize","wildGlitchOption","aspect","updateProjectionMatrix","requestAnimationFrame","render"],"mappings":"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","sourcesContent":["import React,{useEffect,useRef} from 'react'\nimport * as THREE from 'three'\nimport { EffectComposer } from 'three/examples/jsm/postprocessing/EffectComposer.js'\nimport {RenderPass} from 'three/examples/jsm/postprocessing/RenderPass.js'\nimport {GlitchPass} from 'three/examples/jsm/postprocessing/GlitchPass.js'\nimport fontJSON from '../fonts/fontJSON.json'\n\nexport default function DefaultGlitch() {\n    const GlitchRef = useRef()\n    useEffect(() => {\n//==================THREEJS Stuff===================//\nvar camera, scene, renderer, composer;\nvar object, light;\nvar glitchPass;\ninit();\nanimate();\nfunction updateOptions() {\n    var wildGlitch = document.getElementById( 'wildGlitch' );\n    glitchPass.goWild = wildGlitch.checked;\n}\nfunction init() {\n    renderer = new THREE.WebGLRenderer();\n    renderer.setPixelRatio( window.devicePixelRatio );\n    renderer.setSize( window.innerWidth, window.innerHeight );\n    document.body.appendChild( renderer.domElement );\n    //\n    camera = new THREE.PerspectiveCamera( 150, window.innerWidth / window.innerHeight, 1, 1000 );\n    camera.position.z = 400;\n    scene = new THREE.Scene();\n    scene.fog = new THREE.Fog( 0x000000, 1, 1000 );\n    object = new THREE.Object3D();\n    scene.add( object );\n\n    //FOnt\n\n    var loader = new THREE.FontLoader();\n    var font =loader.parse(fontJSON)\n    var geometry = new THREE.TextGeometry(\"Test String\",{font:font, size: 160, height: 10, material: 0, bevelThickness: 1, extrudeMaterial:10})\n    var material = new THREE.MeshPhongMaterial( { color: 0xffffff, flatShading: true } );\n    var mesh = new THREE.Mesh(geometry,material)\n    object.add(mesh)\n    scene.add( new THREE.AmbientLight( 0x222222 ) );\n    light = new THREE.DirectionalLight( 0xffffff );\n    light.position.set( 1, 1, 1 );\n    scene.add( light );\n    // postprocessing\n    composer = new EffectComposer( renderer );\n    composer.addPass( new RenderPass( scene, camera ) );\n    glitchPass = new GlitchPass();\n    composer.addPass( glitchPass );\n    //\n    window.addEventListener( 'resize', onWindowResize, false );\n    var wildGlitchOption = document.getElementById( 'wildGlitch' );\n    wildGlitchOption.addEventListener( 'change', updateOptions );\n    updateOptions();\n}\nfunction onWindowResize() {\n    camera.aspect = window.innerWidth / window.innerHeight;\n    camera.updateProjectionMatrix();\n    renderer.setSize( window.innerWidth, window.innerHeight );\n    composer.setSize( window.innerWidth, window.innerHeight );\n}\nfunction animate() {\n    requestAnimationFrame( animate );\n    composer.render();\n}\n    }, [GlitchRef])\n    return (\n        <div>\n            <div ref={GlitchRef} id =\"wildGlitch\"></div>\n        </div>\n    )\n}\n"]},"metadata":{},"sourceType":"module"}